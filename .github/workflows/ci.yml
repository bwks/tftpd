name: CI/CD

on:
  push:
    branches: ["main"]
  
  pull_request:
    branches: ["main"]

jobs:
  release:
    name: Release
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: "write"

    steps:
    - name: Checkout tftp repo
      uses: actions/checkout@v4
      with:
        repository: altugbakan/rs-tftpd

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Build project
      run: cargo build --release

    - name: Get version
      id: get_version
      run: | 
        echo ::set-output name=VERSION::$(awk -F ' = ' '$1 == "version" { gsub(/["]/, "", $2); print $2 }' Cargo.toml)

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get_version.outputs.VERSION }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/release/tftpd
        asset_name: tftpd-linux-amd64
        asset_content_type: application/octet-stream

  container:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
    - name: Checkout tftp repo
      uses: actions/checkout@v4
      with:
        repository: altugbakan/rs-tftpd

    - name: Checkout this repo
      uses: actions/checkout@v4
      with:
        path: container
  
    - name: testing
      run: ls -la 
  
    - name: testing2
      run: ls -la container

    - name: Get version
      id: get_version
      run: | 
        echo ::set-output name=VERSION::$(awk -F ' = ' '$1 == "version" { gsub(/["]/, "", $2); print $2 }' Cargo.toml)

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./container/Dockerfile
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:${{ steps.get_version.outputs.VERSION }}
          ghcr.io/${{ github.repository }}:latest
